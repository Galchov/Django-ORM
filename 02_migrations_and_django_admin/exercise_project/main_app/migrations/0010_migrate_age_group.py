# Generated by Django 5.0.4 on 2024-10-21 13:17

from django.db import migrations


def set_age_group(apps, schema_editor):
    person_model = apps.get_model('main_app', 'Person')
    people = person_model.objects.all()

    for person in people:  # person -> instance of class Person / {name: "Jeff", age: 45, age_group: "No age group"}
        if person.age <= 12:
            person.age_group = 'Child'
        elif person.age <= 17:
            person.age_group = 'Teen'
        else:
            person.age_group = 'Adult'

        # The slowest solution:
        # person.save()

    # Better solution:
    person_model.objects.bulk_update(people, ['age_group'])


def set_age_group_default(apps, schema_editor):
    person_model = apps.get_model('main_app', 'Person')
    people = person_model.objects.all()

    for person in people:
        # Not the most optimal solution:
        # person.age_group = 'No age group'

        # Better solution:
        person.age_group = person_model._meta.get_field('age_group').default

        # Let's try with the slowest:
        person.save()


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0009_person'),
    ]

    operations = [
        migrations.RunPython(set_age_group, set_age_group_default)
    ]
